# Exports
export LANG=en_US.UTF-8
export EDITOR='nano'

# History
HISTSIZE=5000
HISTFILE=~/.zsh_history
SAVEHIST=$HISTSIZE
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

# Options
setopt extendedglob nomatch notify
unsetopt AUTO_CD               # Implicit CD slows down plugins
#setopt hash_list_all          # hash everything before completion
setopt completealiases        # complete alisases
setopt always_to_end          # when completing from the middle of a word, move the cursor to the end of the word
setopt complete_in_word       # allow completion from within a word/phrase
setopt nocorrect              # spelling correction for commands
#setopt list_ambiguous         # complete as much of a completion until it gets ambiguous.
#setopt nolisttypes
#setopt listpacked
#setopt automenu

# Emacs keybindings
bindkey -e

# Initalize autocompletions
zstyle :compinstall filename '$HOME/.zshrc'
autoload -Uz compinit
compinit

# Make autocompletion case-insensitive
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'

# Disable menu (for fzf)
zstyle ':completion:*' menu no

# Initialize zinit
ZINIT_HOME="$HOME/.local/share/zinit/zinit.git"
[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
source "${ZINIT_HOME}/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Install and initialize starship
zinit ice as"command" from"github-rel" \
          atclone"./starship init zsh > init.zsh; ./starship completions zsh > _starship" \
          atpull"%atclone" src"init.zsh"
zinit light starship/starship

# Install plugins
zinit load zdharma-continuum/history-search-multi-word

zinit ice wait lucid atinit"ZINIT[COMPINIT_OPTS]=-C; zpcompinit; zpcdreplay"
zinit load zdharma-continuum/fast-syntax-highlighting

zinit load hlissner/zsh-autopair

# Install LC_COLORS extension
zinit ice wait"0c" lucid reset \
    atclone"local P=${${(M)OSTYPE:#*darwin*}:+g}
            \${P}sed -i \
            '/DIR/c\DIR 38;5;63;1' LS_COLORS; \
            \${P}dircolors -b LS_COLORS > c.zsh" \
    atpull'%atclone' pick"c.zsh" nocompile'!' \
    atload='zstyle ":completion:*" list-colors ${(s.:.)LS_COLORS}'
zinit load trapd00r/LS_COLORS

# junegunn/fzf-bin
zinit ice from"gh-r" as"program"
zinit load junegunn/fzf
eval "$(fzf --zsh)"
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'

# ogham/exa, replacement for ls
zinit ice from"gh-r" as"program" pick"bin/exa"
zinit load ogham/exa

# zoxide, fuzzy matching cd
zinit ice from"gh-r" as"program"
zinit load ajeetdsouza/zoxide
eval "$(zoxide init --cmd cd zsh)"
zstyle ':fzf-tab:complete:__zoxide_z:*' fzf-preview 'ls --color $realpath'

zinit ice wait lucid atload"!_zsh_autosuggest_start"
zinit load zsh-users/zsh-autosuggestions

zinit load zsh-users/zsh-completions
zinit load Aloxaf/fzf-tab

zinit ice from"gh-r" as"program"
zinit load tldr-pages/tlrc
( tldr --update & ) > /dev/null 2>&1

zinit ice from"gh-r" as"program" mv"bat* -> bat" pick"bat/bat"
zinit load sharkdp/bat

zinit cdreplay -q

# Funtion to get wireless interface and IP
get_wireless_ip() {
  if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    interface=$(iw dev 2>/dev/null | awk '$1=="Interface"{print $2}' || nmcli device status 2>/dev/null | awk '$2=="wifi" {print $1}')
    if [[ -n "$interface" ]]; then
      ip=$(ip -4 -o addr show "$interface" | grep -oP '(?<=inet\s)\d+(\.\d+){3}')
      [[ -n "$ip" ]] && echo "$ip" || echo "?"
    else
      echo ""
    fi
  elif [[ "$OSTYPE" == "darwin"* ]]; then
    interface=$(networksetup -listallhardwareports 2>/dev/null | awk '/Wi-Fi|AirPort/{getline; print $2}')
    if [[ -n "$interface" ]]; then
      ip=$(ipconfig getifaddr "$interface")
      [[ -n "$ip" ]] && echo "$ip" || echo "?"
    else
      echo ""
    fi
  else
    echo ""
  fi
}

# Show current ip:
ip-internal() echo "Wireless :: IP => $( get_wireless_ip )"
ip-external() echo "External :: IP => $( curl --silent https://ifconfig.me )"
ipinfo() { ip-internal && ip-external }

# Keybindings
bindkey "^F" history-search-multi-word
bindkey "^N" history-search-backward
bindkey "^P" history-search-forward

# Aliases
alias ls='exa --all --long --icons --group-directories-first --header --octal-permissions'
alias cat='bat --theme "Solarized (dark)" --tabs 4 --style full'

# Enable Homebrew integration
if [[ -f "/opt/homebrew/bin/brew" ]] then
  eval "$(/opt/homebrew/bin/brew shellenv)"
fi
